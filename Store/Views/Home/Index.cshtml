
@model Store.ViewModel.ProfileUserViewModel
@using System.Collections.Generic
@{
    ViewBag.Title = "Home Page";
    var url = @Url.Content("~/");
}
<h3>Поля профиля</h3>


<div class="row">
    <div class="col-md-auto">
        @Html.ValidationSummary(false)
        @using (@Html.BeginForm("", "Home", FormMethod.Post, new { @id = "ProfileForm" }))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.Id)
            <div class="form-group">
                @Html.LabelFor(model => model.FirstName)
                @Html.TextBoxFor(model => model.FirstName, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.LastName)
                @Html.TextBoxFor(model => model.LastName, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Patronymic)
                @Html.TextBoxFor(model => model.Patronymic, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Patronymic, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.DateBirthDay)
                @Html.TextBoxFor(model => model.DateBirthDay, new { @class = "form-control", @type = "date", @Value = Model.DateBirthDay?.ToString("yyyy-MM-dd") })
                @Html.ValidationMessageFor(model => model.Patronymic, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Password)
                @Html.TextBoxFor(model => model.Password, new { @class = "form-control", @type = "password" })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
            <button type="submit" class="btn btn-primary">Сохранить</button>
        }
    </div>
    <div class="col-md-auto">
        @Html.ValidationSummary(false)
        <div form-group>
            @Html.LabelFor(model => model.Photo)
        </div>
        <div class="form-group">
            @if (Model.Photo != null)
            {
                @Html.Raw("<img id='avatar' src='data:image/jpeg;base64," + Convert.ToBase64String(Model?.Photo) + "' onerror=\"this.src='" + @url + "Images/No_Photo.jpg'\" />")
            }
            else
            {
                @Html.Raw("<img id='avatar' src='" + @url + "Images/No_Photo.jpg" + "'" + "/>");
            }
        </div>
        @using (Html.BeginForm("UploadAvatar", "ProfileApi", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            <fieldset>
                <div class="editor-field">
                    <input class="form-control" type="file" name="UploadImage">
                </div>
            </fieldset>
            <div class="form-group">
                <button type="submit" class="btn btn-primary">Сохранить фото</button>
                <button type="button" class="btn btn-primary" onclick="clearImage()" style="float: right; margin-left: 10px;">Удалить фото</button>
            </div>
        }
    </div>
</div>


<script>
    const profileForm = document.getElementById("ProfileForm");
    profileForm.addEventListener('submit', function (event) {
        event.preventDefault();
        const formData = new FormData(profileForm);
        const jsonData = {};
        formData.forEach(function (value, key) {
            jsonData[key] = value;
        });

        $.ajax({
            url: "@Url.Action("UpdateProfileUser", "ProfileApi")",
            type: 'POST',
            data: jsonData,
            success: function (data) {
                alert('Готово');
            },
            error: function (data) {
                alert(data);
            }
        });
    });

    function clearImage() {
        $.ajax({
            url: "@Url.Action("DeleteAvatar", "ProfileApi")",
            method: "POST",
            success: function (data) {
                alert(data);
                $("#avatar").attr("src", "@url" + "Images/No_Photo.jpg");
            },
            error: function (data) {
                alert(data);
            }
        });
    }
</script>

<style>
    /* Set width on the form input elements since they're 100% wide by default */
    input,
    select,
    textarea {
        max-width: 280px;
    }
</style>